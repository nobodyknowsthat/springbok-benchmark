# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 1 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery
# Parameters: (spatialWidth = 001, timeLength = 24h)

# Run progress: 0.00% complete, ETA 00:00:20
# Fork: 1 of 1
# Warmup Iteration   1: 140206.895 us/op
Iteration   1: 136578.177 us/op


Result "com.anonymous.test.benchmark.benchmark.HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery":
  136578.177 us/op


# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 1 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery
# Parameters: (spatialWidth = 1, timeLength = 24h)

# Run progress: 50.00% complete, ETA 00:02:19
# Fork: 1 of 1
# Warmup Iteration   1: 275751.625 us/op
Iteration   1: 271507.349 us/op


Result "com.anonymous.test.benchmark.benchmark.HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery":
  271507.349 us/op


# Run complete. Total time: 00:06:53

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                    (spatialWidth)  (timeLength)  Mode  Cnt       Score   Error  Units
HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery             001           24h  avgt       136578.177          us/op
HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery               1           24h  avgt       271507.349          us/op
