# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery
# Parameters: (timeLength = 1h)

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: 1359.876 us/op
Iteration   1: 1231.374 us/op
Iteration   2: 1311.713 us/op
Iteration   3: 1338.923 us/op


Result "com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery":
  1294.004 ±(99.9%) 1020.167 us/op [Average]
  (min, avg, max) = (1231.374, 1294.004, 1338.923), stdev = 55.919
  CI (99.9%): [273.837, 2314.170] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery
# Parameters: (timeLength = 6h)

# Run progress: 25.00% complete, ETA 00:01:06
# Fork: 1 of 1
# Warmup Iteration   1: 1402.952 us/op
Iteration   1: 1509.977 us/op
Iteration   2: 1458.090 us/op
Iteration   3: 1264.727 us/op


Result "com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery":
  1410.931 ±(99.9%) 2357.949 us/op [Average]
  (min, avg, max) = (1264.727, 1410.931, 1509.977), stdev = 129.247
  CI (99.9%): [≈ 0, 3768.881] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery
# Parameters: (timeLength = 24h)

# Run progress: 50.00% complete, ETA 00:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 1376.752 us/op
Iteration   1: 1651.695 us/op
Iteration   2: 1487.697 us/op
Iteration   3: 1715.194 us/op


Result "com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery":
  1618.195 ±(99.9%) 2141.629 us/op [Average]
  (min, avg, max) = (1487.697, 1618.195, 1715.194), stdev = 117.390
  CI (99.9%): [≈ 0, 3759.824] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery
# Parameters: (timeLength = 7d)

# Run progress: 75.00% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 4408.511 us/op
Iteration   1: 3566.940 us/op
Iteration   2: 3397.008 us/op
Iteration   3: 3286.621 us/op


Result "com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery":
  3416.856 ±(99.9%) 2576.186 us/op [Average]
  (min, avg, max) = (3286.621, 3416.856, 3566.940), stdev = 141.209
  CI (99.9%): [840.670, 5993.042] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                     (timeLength)  Mode  Cnt     Score      Error  Units
SpringbokIdTemporalBenchmark.idTemporalQuery            1h  avgt    3  1294.004 ± 1020.167  us/op
SpringbokIdTemporalBenchmark.idTemporalQuery            6h  avgt    3  1410.931 ± 2357.949  us/op
SpringbokIdTemporalBenchmark.idTemporalQuery           24h  avgt    3  1618.195 ± 2141.629  us/op
SpringbokIdTemporalBenchmark.idTemporalQuery            7d  avgt    3  3416.856 ± 2576.186  us/op
