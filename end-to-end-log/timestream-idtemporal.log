# JMH version: 1.33
# VM version: JDK 1.8.0_312, OpenJDK 64-Bit Server VM, 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.TimestreamIdTemporalBenchmark.idTemporalQuery
# Parameters: (timeLength = 1h)

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: 135265.505 us/op
Iteration   1: 120800.228 us/op
Iteration   2: 122702.977 us/op
Iteration   3: 125727.219 us/op


Result "com.anonymous.test.benchmark.benchmark.TimestreamIdTemporalBenchmark.idTemporalQuery":
  123076.808 ±(99.9%) 45329.763 us/op [Average]
  (min, avg, max) = (120800.228, 123076.808, 125727.219), stdev = 2484.677
  CI (99.9%): [77747.045, 168406.571] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 1.8.0_312, OpenJDK 64-Bit Server VM, 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.TimestreamIdTemporalBenchmark.idTemporalQuery
# Parameters: (timeLength = 6h)

# Run progress: 25.00% complete, ETA 00:12:38
# Fork: 1 of 1
# Warmup Iteration   1: 140144.654 us/op
Iteration   1: 127844.180 us/op
Iteration   2: 126119.092 us/op
Iteration   3: 130182.072 us/op


Result "com.anonymous.test.benchmark.benchmark.TimestreamIdTemporalBenchmark.idTemporalQuery":
  128048.448 ±(99.9%) 37202.191 us/op [Average]
  (min, avg, max) = (126119.092, 128048.448, 130182.072), stdev = 2039.178
  CI (99.9%): [90846.257, 165250.639] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 1.8.0_312, OpenJDK 64-Bit Server VM, 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.TimestreamIdTemporalBenchmark.idTemporalQuery
# Parameters: (timeLength = 24h)

# Run progress: 50.00% complete, ETA 00:08:35
# Fork: 1 of 1
# Warmup Iteration   1: 164751.861 us/op
Iteration   1: 158061.947 us/op
Iteration   2: 163396.986 us/op
Iteration   3: 170316.658 us/op


Result "com.anonymous.test.benchmark.benchmark.TimestreamIdTemporalBenchmark.idTemporalQuery":
  163925.197 ±(99.9%) 112096.869 us/op [Average]
  (min, avg, max) = (158061.947, 163925.197, 170316.658), stdev = 6144.408
  CI (99.9%): [51828.328, 276022.066] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 1.8.0_312, OpenJDK 64-Bit Server VM, 25.312-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.TimestreamIdTemporalBenchmark.idTemporalQuery
# Parameters: (timeLength = 7d)

# Run progress: 75.00% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 570157.710 us/op
Iteration   1: 500546.537 us/op
Iteration   2: 493255.187 us/op
Iteration   3: 488460.014 us/op


Result "com.anonymous.test.benchmark.benchmark.TimestreamIdTemporalBenchmark.idTemporalQuery":
  494087.246 ±(99.9%) 111032.578 us/op [Average]
  (min, avg, max) = (488460.014, 494087.246, 500546.537), stdev = 6086.070
  CI (99.9%): [383054.667, 605119.824] (assumes normal distribution)


# Run complete. Total time: 00:31:11

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      (timeLength)  Mode  Cnt       Score        Error  Units
TimestreamIdTemporalBenchmark.idTemporalQuery            1h  avgt    3  123076.808 ±  45329.763  us/op
TimestreamIdTemporalBenchmark.idTemporalQuery            6h  avgt    3  128048.448 ±  37202.191  us/op
TimestreamIdTemporalBenchmark.idTemporalQuery           24h  avgt    3  163925.197 ± 112096.869  us/op
TimestreamIdTemporalBenchmark.idTemporalQuery            7d  avgt    3  494087.246 ± 111032.578  us/op
