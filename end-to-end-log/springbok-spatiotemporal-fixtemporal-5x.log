# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.SpringbokSpatialTemporalBenchmark.spatialTemporalRangeQuery
# Parameters: (spatialWidth = 001, timeLength = 24h)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 98460.595 us/op
Iteration   1: 29015.258 us/op
Iteration   2: 25867.098 us/op
Iteration   3: 23398.868 us/op


Result "com.anonymous.test.benchmark.benchmark.SpringbokSpatialTemporalBenchmark.spatialTemporalRangeQuery":
  26093.741 ±(99.9%) 51356.918 us/op [Average]
  (min, avg, max) = (23398.868, 26093.741, 29015.258), stdev = 2815.046
  CI (99.9%): [≈ 0, 77450.660] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.SpringbokSpatialTemporalBenchmark.spatialTemporalRangeQuery
# Parameters: (spatialWidth = 01, timeLength = 24h)

# Run progress: 33.33% complete, ETA 00:02:57
# Fork: 1 of 1
# Warmup Iteration   1: 478032.749 us/op
Iteration   1: 116075.124 us/op
Iteration   2: 110711.984 us/op
Iteration   3: 116938.830 us/op


Result "com.anonymous.test.benchmark.benchmark.SpringbokSpatialTemporalBenchmark.spatialTemporalRangeQuery":
  114575.312 ±(99.9%) 61545.136 us/op [Average]
  (min, avg, max) = (110711.984, 114575.312, 116938.830), stdev = 3373.497
  CI (99.9%): [53030.177, 176120.448] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.SpringbokSpatialTemporalBenchmark.spatialTemporalRangeQuery
# Parameters: (spatialWidth = 1, timeLength = 24h)

# Run progress: 66.67% complete, ETA 00:04:10
# Fork: 1 of 1
# Warmup Iteration   1: 1686365.635 us/op
Iteration   1: 860164.143 us/op
Iteration   2: 857764.663 us/op
Iteration   3: 854175.387 us/op


Result "com.anonymous.test.benchmark.benchmark.SpringbokSpatialTemporalBenchmark.spatialTemporalRangeQuery":
  857368.064 ±(99.9%) 54986.803 us/op [Average]
  (min, avg, max) = (854175.387, 857368.064, 860164.143), stdev = 3014.012
  CI (99.9%): [802381.261, 912354.868] (assumes normal distribution)


# Run complete. Total time: 00:43:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                    (spatialWidth)  (timeLength)  Mode  Cnt       Score       Error  Units
SpringbokSpatialTemporalBenchmark.spatialTemporalRangeQuery             001           24h  avgt    3   26093.741 ± 51356.918  us/op
SpringbokSpatialTemporalBenchmark.spatialTemporalRangeQuery              01           24h  avgt    3  114575.312 ± 61545.136  us/op
SpringbokSpatialTemporalBenchmark.spatialTemporalRangeQuery               1           24h  avgt    3  857368.064 ± 54986.803  us/op
