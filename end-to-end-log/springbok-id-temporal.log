# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery
# Parameters: (timeLength = 1h)

# Run progress: 0.00% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: 4700.403 us/op
Iteration   1: 3747.863 us/op
Iteration   2: 3419.582 us/op
Iteration   3: 3293.698 us/op


Result "com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery":
  3487.048 ±(99.9%) 4277.757 us/op [Average]
  (min, avg, max) = (3293.698, 3487.048, 3747.863), stdev = 234.478
  CI (99.9%): [≈ 0, 7764.805] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery
# Parameters: (timeLength = 6h)

# Run progress: 25.00% complete, ETA 00:01:15
# Fork: 1 of 1
# Warmup Iteration   1: 1849.429 us/op
Iteration   1: 1463.420 us/op
Iteration   2: 1473.098 us/op
Iteration   3: 1391.654 us/op


Result "com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery":
  1442.724 ±(99.9%) 811.700 us/op [Average]
  (min, avg, max) = (1391.654, 1442.724, 1473.098), stdev = 44.492
  CI (99.9%): [631.024, 2254.424] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery
# Parameters: (timeLength = 24h)

# Run progress: 50.00% complete, ETA 00:00:47
# Fork: 1 of 1
# Warmup Iteration   1: 2063.821 us/op
Iteration   1: 1450.973 us/op
Iteration   2: 1284.216 us/op
Iteration   3: 1510.945 us/op


Result "com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery":
  1415.378 ±(99.9%) 2143.288 us/op [Average]
  (min, avg, max) = (1284.216, 1415.378, 1510.945), stdev = 117.481
  CI (99.9%): [≈ 0, 3558.666] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery
# Parameters: (timeLength = 7d)

# Run progress: 75.00% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 11088.349 us/op
Iteration   1: 8447.998 us/op
Iteration   2: 7301.692 us/op
Iteration   3: 6644.145 us/op


Result "com.anonymous.test.benchmark.benchmark.SpringbokIdTemporalBenchmark.idTemporalQuery":
  7464.612 ±(99.9%) 16654.611 us/op [Average]
  (min, avg, max) = (6644.145, 7464.612, 8447.998), stdev = 912.895
  CI (99.9%): [≈ 0, 24119.222] (assumes normal distribution)


# Run complete. Total time: 00:01:36

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                     (timeLength)  Mode  Cnt     Score       Error  Units
SpringbokIdTemporalBenchmark.idTemporalQuery            1h  avgt    3  3487.048 ±  4277.757  us/op
SpringbokIdTemporalBenchmark.idTemporalQuery            6h  avgt    3  1442.724 ±   811.700  us/op
SpringbokIdTemporalBenchmark.idTemporalQuery           24h  avgt    3  1415.378 ±  2143.288  us/op
SpringbokIdTemporalBenchmark.idTemporalQuery            7d  avgt    3  7464.612 ± 16654.611  us/op
