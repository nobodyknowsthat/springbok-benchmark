# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery
# Parameters: (spatialWidth = 001, timeLength = 24h)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 25755.881 us/op
Iteration   1: 14901.351 us/op
Iteration   2: 14698.286 us/op
Iteration   3: 14689.143 us/op


Result "com.anonymous.test.benchmark.benchmark.HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery":
  14762.926 ±(99.9%) 2188.634 us/op [Average]
  (min, avg, max) = (14689.143, 14762.926, 14901.351), stdev = 119.966
  CI (99.9%): [12574.292, 16951.561] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery
# Parameters: (spatialWidth = 01, timeLength = 24h)

# Run progress: 33.33% complete, ETA 00:01:11
# Fork: 1 of 1
# Warmup Iteration   1: 48572.722 us/op
Iteration   1: 36502.543 us/op
Iteration   2: 37165.229 us/op
Iteration   3: 36312.027 us/op


Result "com.anonymous.test.benchmark.benchmark.HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery":
  36659.933 ±(99.9%) 8170.399 us/op [Average]
  (min, avg, max) = (36312.027, 36659.933, 37165.229), stdev = 447.847
  CI (99.9%): [28489.534, 44830.332] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 1.8.0_342, OpenJDK 64-Bit Server VM, 25.342-b07
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 5 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.anonymous.test.benchmark.benchmark.HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery
# Parameters: (spatialWidth = 1, timeLength = 24h)

# Run progress: 66.67% complete, ETA 00:00:57
# Fork: 1 of 1
# Warmup Iteration   1: 239627.988 us/op
Iteration   1: 234043.463 us/op
Iteration   2: 235577.177 us/op
Iteration   3: 235880.566 us/op


Result "com.anonymous.test.benchmark.benchmark.HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery":
  235167.069 ±(99.9%) 17966.851 us/op [Average]
  (min, avg, max) = (234043.463, 235167.069, 235880.566), stdev = 984.824
  CI (99.9%): [217200.217, 253133.920] (assumes normal distribution)


# Run complete. Total time: 00:09:49

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                    (spatialWidth)  (timeLength)  Mode  Cnt       Score       Error  Units
HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery             001           24h  avgt    3   14762.926 ±  2188.634  us/op
HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery              01           24h  avgt    3   36659.933 ±  8170.399  us/op
HBaseSpatioTemporalQueryBenchmark.spatialTemporalRangeQuery               1           24h  avgt    3  235167.069 ± 17966.851  us/op
